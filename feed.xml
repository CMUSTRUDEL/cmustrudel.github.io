<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>STRUDEL</title>
    <description>The Socio-Technical Research Using Data Excavation Lab at Carnegie Mellon University</description>
    <link>http://cmustrudel.github.io/</link>
    <atom:link href="http://cmustrudel.github.io/feed.xml" rel="self" type="application/rss+xml" />
    <pubDate>Fri, 01 Feb 2019 20:48:11 +0000</pubDate>
    <lastBuildDate>Fri, 01 Feb 2019 20:48:11 +0000</lastBuildDate>
    <generator>Jekyll v3.8.5</generator>
    
      <item>
        <title>Blog: STRUDEL Reading Group updates</title>
        <description>&lt;h4 id=&quot;wednesday-july-25-2018&quot;&gt;Wednesday, July 25, 2018&lt;/h4&gt;

&lt;p&gt;So sad. Today was the last group meeting of the summer season.
Thanks a lot to our REU students Sophie and Courtney for spending their
summer with us. We appreciate your visit.&lt;/p&gt;

&lt;p&gt;Here’s all of us wearing STRUDEL gear:&lt;/p&gt;

&lt;figure class=&quot;flickr&quot;&gt;
  &lt;img class=&quot;flickr&quot; src=&quot;https://farm5.staticflickr.com/4893/33073145978_1607c959da_b.jpg&quot; srcset=&quot;https://farm5.staticflickr.com/4893/33073145978_1607c959da_m.jpg 240w, https://farm5.staticflickr.com/4893/33073145978_1607c959da_n.jpg 320w, https://farm5.staticflickr.com/4893/33073145978_1607c959da.jpg 500w, https://farm5.staticflickr.com/4893/33073145978_1607c959da_z.jpg 640w, https://farm5.staticflickr.com/4893/33073145978_1607c959da_c.jpg 800w, https://farm5.staticflickr.com/4893/33073145978_1607c959da_b.jpg 1024w&quot; sizes=&quot;100vw&quot; /&gt;
  &lt;figcaption&gt;&lt;div class=&quot;license&quot;&gt;&amp;copy; Flickr/&lt;a href=&quot;https://www.flickr.com/photos/159982920@N04/33073145978/&quot;&gt;cmustrudel&lt;/a&gt; &lt;a href=&quot;&quot;&gt;All Rights Reserved&lt;/a&gt;&lt;/div&gt;&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;!--more--&gt;
&lt;figure class=&quot;flickr&quot;&gt;
  &lt;img class=&quot;flickr&quot; src=&quot;https://farm5.staticflickr.com/4821/33073145848_3459741da4_b.jpg&quot; srcset=&quot;https://farm5.staticflickr.com/4821/33073145848_3459741da4_m.jpg 240w, https://farm5.staticflickr.com/4821/33073145848_3459741da4_n.jpg 320w, https://farm5.staticflickr.com/4821/33073145848_3459741da4.jpg 500w, https://farm5.staticflickr.com/4821/33073145848_3459741da4_z.jpg 640w, https://farm5.staticflickr.com/4821/33073145848_3459741da4_c.jpg 800w, https://farm5.staticflickr.com/4821/33073145848_3459741da4_b.jpg 1024w&quot; sizes=&quot;100vw&quot; /&gt;
  &lt;figcaption&gt;&lt;div class=&quot;license&quot;&gt;&amp;copy; Flickr/&lt;a href=&quot;https://www.flickr.com/photos/159982920@N04/33073145848/&quot;&gt;cmustrudel&lt;/a&gt; &lt;a href=&quot;&quot;&gt;All Rights Reserved&lt;/a&gt;&lt;/div&gt;&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;h4 id=&quot;wednesday-june-27-2018&quot;&gt;Wednesday, June 27, 2018&lt;/h4&gt;

&lt;p&gt;Our REU student Courtney volunteered to present the paper &lt;b&gt;Do Programmers Work
at Night or During the Weekend&lt;/b&gt; (Claes et al., ICSE, 2018).
Being a college freshman, Courtney did a wonderful job presenting this
paper. 
There are several different types of visualisation in this paper and we
discussed their merits and defects.
Hopefully Courtney would find these examples useful when she has to present her work.&lt;/p&gt;

&lt;p&gt;Sophie brought a piece of raspberry dark chocolate and a piece of 92% dark
chocolate. She presented the chocolate without any lable and left them to her
lab mates to figure out.&lt;/p&gt;

&lt;h4 id=&quot;wednesday-june-20-2018&quot;&gt;Wednesday, June 20, 2018&lt;/h4&gt;

&lt;p&gt;David Widder presented the paper &lt;b&gt;Prevalence of Confusing Code in Software
Projects&lt;/b&gt; (Gopstein et al., MSR, 2018). I really like this paper especially
the confusing code they presented in the paper. Honestly, I think some of them
are fun to be kept in the code. They can sift out those who do not have solid
background in the C language and keep only experts in the develop team. 
I do believe that projects like Linux require developers with C knowledge far
beyond what one can learn from some online C tutorial or a single semester
college course.
However,
I think it is also necessary to remove confusing code so that more people can
get involved in the developing process. After all, more often than not, some
pieces of code are excessively confusing, especially we now have the luxury to
sacrifice disk space for code clarity.&lt;/p&gt;

&lt;p&gt;Davide brought some brownies and Sophie brought some Chinese rice cake for the
dragon boat festival.&lt;/p&gt;

&lt;h4 id=&quot;wednesday-may-23-2018&quot;&gt;Wednesday, May 23, 2018&lt;/h4&gt;

&lt;p&gt;After a few weeks’ practice talks done by several STRUDEL members, Sophie Qiu, yes, her again, presented the
paper &lt;b&gt;Newcomers’ Barriers. . . Is That All? An Analysis of Mentors’ and
Newcomers’ Barriers in OSS Projects&lt;/b&gt; (Balali et al., CSCW, 2018).
The paper identified several barriers that mentors are facing in open source
software projects. There are many newly found barriers but I think some of them
can be combined with or subsumed under some old ones; some need more details or
real instances. 
I think the barriers that they had identified are important.
However, I wish to see more practical and concrete solutions.&lt;/p&gt;

&lt;h4 id=&quot;wednesday-april-25-2018&quot;&gt;Wednesday, April 25, 2018&lt;/h4&gt;

&lt;p&gt;Sophie Qiu presented the freshly baked paper &lt;b&gt;Competence-Confidence Gap: A
Threat to Female Developers’ Contribution on GitHub&lt;/b&gt; (Wang et al., ICSE,
2018).
The authors show that there is a Granger causality between female programmers’ raise of number
of followers and their pull requests on GitHub. They claim that this is because
the number of followers bridges women’s competence-confidence gap and reassures 
female programmer that their contribution will be welcomed and
valuable.
Although this sounds a potential solution to encourage women to make
contributions to open source softwares, the paper did not mention how these
woemn earned new followers in the first place. The only example vaguely
mentioned was that the female programmer looked cute, which is in fact not an
acknowledgement of her programming ability.&lt;/p&gt;

&lt;h4 id=&quot;wednesday-april-4-2018&quot;&gt;Wednesday, April 4, 2018&lt;/h4&gt;

&lt;p&gt;Alan Jaffe presented the paper &lt;b&gt;&lt;a href=&quot;http://victorialin.net/pubs/tellina_tr_2017.pdf&quot;&gt;Program Synthesis from Natural Language Using
Recurrent Neural Networks&lt;/a&gt;&lt;/b&gt; (Lin et al., UW-CSE, 2017).
We often say there are two major coding styles: stackoverflow oriented
programming and google oriented programming.
The point it is making is that all the code we need are written, programmers
only need to assemble them to make a executable program.
I believe this can be easily replaced by machines and this paper is a proof.&lt;/p&gt;

&lt;h4 id=&quot;wednesday-march-28-2018&quot;&gt;Wednesday, March 28, 2018&lt;/h4&gt;

&lt;p&gt;Marat Valiet presented the paper &lt;b&gt;&lt;a href=&quot;https://arxiv.org/pdf/1802.07068.pdf&quot;&gt;Talent vs Luck: the role of
randomness in success and failure&lt;/a&gt;&lt;/b&gt;.
This paper is a cool example of using simulation to address real life problems.
With a simple design they were able to model different funding policies and
their outcome. The paper claims that in some setups with a large influence of
luck, strategies based on random choices are more effective than traditional
“naively meritocratic” models.&lt;/p&gt;

&lt;p&gt;Somehow people had forgotten our good tradition of bringing snacks.&lt;/p&gt;

&lt;h4 id=&quot;wednesday-march-21-2018&quot;&gt;Wednesday, March 21, 2018&lt;/h4&gt;

&lt;p&gt;Bogdan Vasilescu presented the paper &lt;b&gt;Was my contribution fairly
reviewed?” A Framework to Study the Perception of Fairness in Modern Code
Reviews&lt;/b&gt; (Yang, ICSE, 2018). In the paper, many different aspects of fairness are discussed,
which was very inspiring.&lt;/p&gt;

&lt;h4 id=&quot;wednesday-feburary-21-2018&quot;&gt;Wednesday, Feburary 21, 2018&lt;/h4&gt;

&lt;p&gt;Jeremy Lacomis presented the paper &lt;b&gt;&lt;a href=&quot;https://hal.inria.fr/hal-01691496/file/SEIP_63_Camera-Ready-no-copyright.pdf&quot;&gt;How
to Design a Program Repair Bot? Insights from
the Repairnator Project&lt;/a&gt;&lt;/b&gt; (Urli et al. ICSE 2018).&lt;/p&gt;

&lt;p&gt;It is interesting to learn about online program repair bugs. When I was talking
with a CMU undergrad at one of &lt;a href=&quot;https://www.facebook.com/groups/cmukgb/&quot;&gt;KGB&lt;/a&gt;’s activity, he was excited
to learn that people are working on how to fix bugs automatically since he has
some very unpleasant experience with debugging - so do many of us. It would be
great if we could have a bug repairing bot with high accuracy in the future.
However, as Marat pointed out, when the debugging process can be largely
substituted by a robot, that means this language is dying. One example is
Assembly. Here’s a quote from Paul Graham
about the evolution of programming languages:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;“What programmers in a hundred years will be looking for, most of all, is a
language where you can throw together an unbelievably inefficient version 1 of a
program with the least possible effort. At least, that’s how we’d describe it in
present-day terms. What they’ll say is that they want a language that’s easy to
program in.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Inefficient software isn’t gross. What’s gross is a language that makes
programmers do needless work. Wasting programmer time is the true inefficiency,
not wasting machine time. This will become ever more clear as computers get
faster.” (source: &lt;a href=&quot;http://www.paulgraham.com/hundred.html&quot;&gt;http://www.paulgraham.com/hundred.html&lt;/a&gt;)&lt;/p&gt;

&lt;h4 id=&quot;wednesday-feburary-14-2018&quot;&gt;Wednesday, Feburary 14, 2018&lt;/h4&gt;

&lt;p&gt;Jason Yanwen Lin presented the paper
&lt;b&gt;&lt;a href=&quot;http://haiyizhu.com/wp-content/uploads/2017/01/predicting-member-productivity-1.pdf&quot;&gt;Predicting
Member Productivity and Withdrawal from
Pre-Joining Attachments in Online Production Groups&lt;/a&gt;&lt;/b&gt; (Yu et al. CSCW 17).&lt;/p&gt;

&lt;p&gt;This paper analysed withdrawl from Wikipedia groups using the attachment
theories from social psychology. 
There results show that pre-joining connections are important to online
production groups. Speaking from my personal experience, I totally agree with
the authors. Especially in online community, when you often interact with people
who you don’t konw much personal information, it can be hard to form attachment.&lt;/p&gt;

&lt;h4 id=&quot;wednesday-feburary-7-2018&quot;&gt;Wednesday, Feburary 7, 2018&lt;/h4&gt;

&lt;p&gt;Shurui Zhou presented the paper &lt;b&gt;&lt;a href=&quot;http://gustavopinto.org/lost+found/icse2018.pdf&quot;&gt;Almost There: A Study on
Quasi-Contributors in Open-Source Software Projects&lt;/a&gt;&lt;/b&gt; (Steinmarcher et al.,
ICSE 2018).&lt;/p&gt;

&lt;p&gt;It was interesting to learn that many people stopped making further
contribution on GitHub after their first pull request was rejected. We also felt
that there would be many future work worth pursuing. Thanks Shurui’s
presentation as well as her snacks.&lt;/p&gt;

&lt;p&gt;Since it was Alex’s meeting before he became a
professor in Estonia, he also brought some
pastries from Gates. We appreciated his intention of getting us fat. We will
miss you.&lt;/p&gt;

&lt;p&gt;By the way, I think Gates’ blueberry muffin is very nice, as well as banana &amp;amp;
nuts in Scott. Nevertheless, no muffin compares to thos in Brown’s Blue Room or
banana muffin at Corner Bakery Cafe.&lt;/p&gt;

&lt;h4 id=&quot;wednesday-janurary-14-2018&quot;&gt;Wednesday, Janurary 14, 2018&lt;/h4&gt;

&lt;p&gt;David Widder presented the paper &lt;b&gt;&lt;a href=&quot;https://ir.library.oregonstate.edu/downloads/wh246x964&quot;&gt;Open Source
barriers to entry, revisited: A tools perspective&lt;/a&gt;&lt;/b&gt; (Mendez et al. ICSE 2018).&lt;/p&gt;

&lt;p&gt;Professor Margaret Burnett’s team has been studying GitHub’s gender inclusive
issues. Since men and women are biologically different statistically, tools
should be designed to cater their different ways of thinking and engaging with
software. I do not think software developing is an inheritly male dominated task. I
believe that getting
more women into software developing is a key to gender equality. Yes, I am a
feminist.&lt;/p&gt;

&lt;p&gt;Davis is very good at baking, but I think he should have given out his delicious
brownies at the beginning of his presentation rather than at the end.&lt;/p&gt;

&lt;h4 id=&quot;thusday-december-5-2017&quot;&gt;Thusday, December 5, 2017&lt;/h4&gt;

&lt;p&gt;Sophie Qiu presented the paper &lt;b&gt;&lt;a href=&quot;https://www.sciencedirect.com/science/article/pii/S1071581916301033&quot;&gt;The influence of visual feedback and
gender dynamics on performance,
perception and communication strategies in CSCW&lt;/a&gt;&lt;/b&gt; (Koulouri et al.
International Journal of Human-Computer Studies 2017).&lt;/p&gt;

&lt;p&gt;This paper shows that while men are statistically better at navigation with help
from visual signals, women can use verbal communication to compensate such
weakness and achieve the same level of excellency in navitation tasks.
GenderMag, which David Widder will present later, is in the same mindset that
although men and women are statistically biologically different, well-designed
tools can help both of them succeed.&lt;/p&gt;

&lt;p&gt;Sophie did not know that green been pie could contain cream so she bought a lot
of them. Luckily, she could bring them to Strudel meetings so that everyone can
eat them and be merry.&lt;/p&gt;

&lt;h4 id=&quot;tuesday-november-28-2017&quot;&gt;Tuesday, November 28, 2017&lt;/h4&gt;

&lt;p&gt;Bogdan Vasilescu presented the paper &lt;b&gt;&lt;a href=&quot;http://ieeexplore.ieee.org/document/8031982/&quot;&gt;Code Coverage and Postrelease
Defects: A Large-Scale Study on Open Source Projects&lt;/a&gt;&lt;/b&gt; (Kochhar et al. 2017).&lt;/p&gt;

&lt;p&gt;This paper shows that code coverage in testing has insignificant correlation
with the number of bugs at the project level of a software. Then my question
was: how much test would be sufficient if a large software project could never be
bug-free?&lt;/p&gt;

&lt;p&gt;I do not remember what snack we had during that meeting.&lt;/p&gt;

&lt;h4 id=&quot;tuesday-november-21-2017&quot;&gt;Tuesday, November 21, 2017&lt;/h4&gt;

&lt;p&gt;Shurui Zhou presented the paper &lt;b&gt;&lt;a href=&quot;https://dl.acm.org/citation.cfm?id=3104225&quot;&gt;Some from here, some from
there: cross-project code reuse in GitHub&lt;/a&gt;&lt;/b&gt; (Gharehyazie et al., MSR 2017).&lt;/p&gt;

&lt;p&gt;This paper reminds me of two most popular ways of coding: Google-oriented coding
and stackoverflow-oriented coding. It is expensive to write code from scratch,
so understanding how code pieces are cloned across projects is useful.&lt;/p&gt;

&lt;p&gt;I do not quite remember the snack but it might be Shurui’s Choco Pie.&lt;/p&gt;

&lt;h4 id=&quot;tuesday-november-14-2017&quot;&gt;Tuesday, November 14, 2017&lt;/h4&gt;

&lt;p&gt;Alexander Nolte presented the paper &lt;b&gt;&lt;a href=&quot;http://hci.stanford.edu/publications/2017/flashorgs/flash-orgs-chi-2017.pdf&quot;&gt;Flash Organizations:
Crowdsourcing Complex Work by Structuring Crowds As Organizations&lt;/a&gt;&lt;/b&gt;.&lt;/p&gt;

&lt;p&gt;It is a nice paper on how to more effectively form an software developing group.
It was good to read some paper on HCI, which I was fascinated in but knew very
little about.&lt;/p&gt;

&lt;p&gt;Thanks for your cookies, Alex. I guess they came from La Prima Espresso in
WEAN.&lt;/p&gt;

&lt;h4 id=&quot;tuesday-november-7-2017&quot;&gt;Tuesday, November 7, 2017&lt;/h4&gt;

&lt;p&gt;Alan Jaffe presented the paper &lt;b&gt;&lt;a href=&quot;https://arxiv.org/pdf/1708.09492.pdf&quot;&gt;Automatically Generating Commit Messages
from Diffs Using Neural Machine Translation&lt;/a&gt;&lt;/b&gt; (Jiang et al., ASE
2017).&lt;/p&gt;

&lt;p&gt;It is an interesting application of the naturalness of code. I
learned a lot about the idea of naturalness of code, as well as the fact
that Alan is very good at baking pumpkin pies.&lt;/p&gt;

&lt;h4 id=&quot;tuesday-october-31-2017&quot;&gt;Tuesday, October 31, 2017&lt;/h4&gt;

&lt;p&gt;No meeting this week. STRUDEL was away attending 
&lt;a href=&quot;http://ase2017.org&quot;&gt;ASE&lt;/a&gt; in Urbana-Champaign, IL and visiting
Fiona at the &lt;a href=&quot;https://www.facebook.com/cincinnatizoo/&quot;&gt;Cincinnati Zoo&lt;/a&gt;.
#teamfiona&lt;/p&gt;

&lt;figure class=&quot;flickr&quot;&gt;
  &lt;img class=&quot;flickr&quot; src=&quot;https://farm1.staticflickr.com/854/43180283944_379c88bef1_b.jpg&quot; srcset=&quot;https://farm1.staticflickr.com/854/43180283944_379c88bef1_m.jpg 240w, https://farm1.staticflickr.com/854/43180283944_379c88bef1_n.jpg 320w, https://farm1.staticflickr.com/854/43180283944_379c88bef1.jpg 500w, https://farm1.staticflickr.com/854/43180283944_379c88bef1_z.jpg 640w, https://farm1.staticflickr.com/854/43180283944_379c88bef1_c.jpg 800w, https://farm1.staticflickr.com/854/43180283944_379c88bef1_b.jpg 1024w&quot; sizes=&quot;100vw&quot; /&gt;
  &lt;figcaption&gt;&lt;div class=&quot;license&quot;&gt;&amp;copy; Flickr/&lt;a href=&quot;https://www.flickr.com/photos/159982920@N04/43180283944/&quot;&gt;cmustrudel&lt;/a&gt; &lt;a href=&quot;&quot;&gt;All Rights Reserved&lt;/a&gt;&lt;/div&gt;&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;h4 id=&quot;tuesday-october-24-2017&quot;&gt;Tuesday, October 24, 2017&lt;/h4&gt;

&lt;p&gt;STRUDEL was proud to host &lt;b&gt;&lt;a href=&quot;http://www.win.tue.nl/~aserebre/&quot;&gt;Alexander 
Serebrenik&lt;/a&gt;&lt;/b&gt; from TU Eindhoven, who talked about his recent work on mining 
emotions from software engineering artifacts.
We were all enjoying his talk as well as Sophie’s hazelnut wafel.&lt;/p&gt;

&lt;figure class=&quot;flickr&quot;&gt;
  &lt;img class=&quot;flickr&quot; src=&quot;https://farm2.staticflickr.com/1797/42993926095_5da646eee1_b.jpg&quot; srcset=&quot;https://farm2.staticflickr.com/1797/42993926095_5da646eee1_m.jpg 240w, https://farm2.staticflickr.com/1797/42993926095_5da646eee1_n.jpg 320w, https://farm2.staticflickr.com/1797/42993926095_5da646eee1.jpg 500w, https://farm2.staticflickr.com/1797/42993926095_5da646eee1_z.jpg 640w, https://farm2.staticflickr.com/1797/42993926095_5da646eee1_c.jpg 800w, https://farm2.staticflickr.com/1797/42993926095_5da646eee1_b.jpg 1024w&quot; sizes=&quot;100vw&quot; /&gt;
  &lt;figcaption&gt;&lt;div class=&quot;license&quot;&gt;&amp;copy; Flickr/&lt;a href=&quot;https://www.flickr.com/photos/159982920@N04/42993926095/&quot;&gt;cmustrudel&lt;/a&gt; &lt;a href=&quot;&quot;&gt;All Rights Reserved&lt;/a&gt;&lt;/div&gt;&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;h4 id=&quot;tuesday-october-17-2017&quot;&gt;Tuesday, October 17, 2017&lt;/h4&gt;

&lt;p&gt;Sophie presented the paper &lt;b&gt;&lt;a href=&quot;http://www.cs.cmu.edu/~fmri/plosone/files/hp_PLOS_ONE.pdf&quot;&gt;Simultaneously
Uncovering the Patterns of
Brain Regions Involved in Different Story
Reading Subprocesses&lt;/a&gt;&lt;/b&gt; (Wehbe et al., PLoS ONE 2014).&lt;/p&gt;

&lt;p&gt;The researchers scanned participants brains while they were reading
the ninth chapter of &lt;i&gt;Harry Potter and the Sorcerer’s Stone&lt;/i&gt;. They
then trained a classifier that can distinguish which short passage the
participants were reading based on the neural activity. The choice of
this paper was to present group members another machine learning
classifier that can process fMRI results. 
It was very nice and sweet that David made apple raisin strudels.&lt;/p&gt;

&lt;figure class=&quot;flickr&quot;&gt;
  &lt;img class=&quot;flickr&quot; src=&quot;https://farm2.staticflickr.com/1837/43180283674_28b7c4d9d9_b.jpg&quot; srcset=&quot;https://farm2.staticflickr.com/1837/43180283674_28b7c4d9d9_m.jpg 240w, https://farm2.staticflickr.com/1837/43180283674_28b7c4d9d9_n.jpg 320w, https://farm2.staticflickr.com/1837/43180283674_28b7c4d9d9.jpg 500w, https://farm2.staticflickr.com/1837/43180283674_28b7c4d9d9_z.jpg 640w, https://farm2.staticflickr.com/1837/43180283674_28b7c4d9d9_c.jpg 800w, https://farm2.staticflickr.com/1837/43180283674_28b7c4d9d9_b.jpg 1024w&quot; sizes=&quot;100vw&quot; /&gt;
  &lt;figcaption&gt;&lt;div class=&quot;license&quot;&gt;&amp;copy; Flickr/&lt;a href=&quot;https://www.flickr.com/photos/159982920@N04/43180283674/&quot;&gt;cmustrudel&lt;/a&gt; &lt;a href=&quot;&quot;&gt;All Rights Reserved&lt;/a&gt;&lt;/div&gt;&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;h4 id=&quot;tuesday-october-10-2017&quot;&gt;Tuesday, October 10, 2017&lt;/h4&gt;

&lt;p&gt;Marat presented the paper &lt;b&gt;&lt;a href=&quot;http://delivery.acm.org/10.1145/2540000/2531642/p831-backstrom.pdf?ip=24.238.13.130&amp;amp;id=2531642&amp;amp;acc=OA&amp;amp;key=4D4702B0C3E38B35%2E4D4702B0C3E38B35%2E4D4702B0C3E38B35%2E528920FC4509E774&amp;amp;CFID=993659916&amp;amp;CFTOKEN=60398709&amp;amp;__acm__=1509333674_18432c45ea35e7515bb15ff9492d27f0&quot;&gt;Romantic partnerships and the
dispersion of social ties: a network analysis of relationship status on
facebook&lt;/a&gt;&lt;/b&gt; (Backstrom et al, CSCW 2014).&lt;/p&gt;

&lt;p&gt;This paper proposed to use
dispersion, which measures “the extent to which two people’s mutual
friends are not themselves well-connected,” in addition to embeddedness,
which measures the number of mutural friends, to predict if two Facebook users 
are in a romantic relationship. The accuracy of prediction increased 
significantly when using the dispersion metric.
Somehow, my impression of the paper smells like homemade banana bread.&lt;/p&gt;

&lt;h4 id=&quot;tuesday-october-3-2017&quot;&gt;Tuesday, October 3, 2017&lt;/h4&gt;

&lt;p&gt;David presented the paper &lt;b&gt;&lt;a href=&quot;https://yuchi1989.github.io/papers/fse17-ErrDoc.pdf&quot;&gt;Automatically
Diagnosing and Repairing Error Handling Bugs in C&lt;/a&gt;&lt;/b&gt; (Tian and Ray, ESEC/FSE 2017).&lt;/p&gt;

&lt;p&gt;This paper presents how to identify different types of bugs and how to correct
them in C/C++ code. 
Happy Mid-autumn festival and thanks Sophie for her mooncake!&lt;/p&gt;

&lt;figure class=&quot;flickr&quot;&gt;
  &lt;img class=&quot;flickr&quot; src=&quot;https://farm2.staticflickr.com/1793/42993925755_26aa2b1f4f_b.jpg&quot; srcset=&quot;https://farm2.staticflickr.com/1793/42993925755_26aa2b1f4f_m.jpg 240w, https://farm2.staticflickr.com/1793/42993925755_26aa2b1f4f_n.jpg 320w, https://farm2.staticflickr.com/1793/42993925755_26aa2b1f4f.jpg 500w, https://farm2.staticflickr.com/1793/42993925755_26aa2b1f4f_z.jpg 640w, https://farm2.staticflickr.com/1793/42993925755_26aa2b1f4f_c.jpg 800w, https://farm2.staticflickr.com/1793/42993925755_26aa2b1f4f_b.jpg 1024w&quot; sizes=&quot;100vw&quot; /&gt;
  &lt;figcaption&gt;&lt;div class=&quot;license&quot;&gt;&amp;copy; Flickr/&lt;a href=&quot;https://www.flickr.com/photos/159982920@N04/42993925755/&quot;&gt;cmustrudel&lt;/a&gt; &lt;a href=&quot;&quot;&gt;All Rights Reserved&lt;/a&gt;&lt;/div&gt;&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;h4 id=&quot;tuesday-september-26-2017&quot;&gt;Tuesday, September 26, 2017&lt;/h4&gt;

&lt;p&gt;Jeremy presented the paper &lt;b&gt;&lt;a href=&quot;https://web.eecs.umich.edu/~weimerw/p/weimer-icse2017-preprint.pdf&quot;&gt;Decoding the representation of code in the
brain: An fMRI study of code review and expertise&lt;/a&gt;&lt;/b&gt; (Floyd et al, ICSE 2017).&lt;/p&gt;

&lt;p&gt;The researchers scanned participants’ brain while they were reviewing code or 
prose. The findings suggest that reading code differs from reading natural 
language, but less so for experts than for novices.&lt;/p&gt;

&lt;h4 id=&quot;tuesday-september-19-2017&quot;&gt;Tuesday, September 19, 2017&lt;/h4&gt;

&lt;p&gt;We had our first reading group meeting today! To celebrate, Bogdan brought 
apple-cinnamon strudels for us. Nevertheless, these strudles were not as
good as our discussion on the paper &lt;b&gt;&lt;a href=&quot;http://people.cs.umass.edu/~ameli/projects/fairness/papers/discriminationTesting.pdf&quot;&gt;Fairness Testing: 
Testing Software for Discrimination&lt;/a&gt;&lt;/b&gt; (Galhotra et al, ESEC/FSE 2017) that 
Bogdan presented at the meeting.&lt;/p&gt;

&lt;figure class=&quot;flickr&quot;&gt;
  &lt;img class=&quot;flickr&quot; src=&quot;https://farm1.staticflickr.com/941/42993925555_945c115392_b.jpg&quot; srcset=&quot;https://farm1.staticflickr.com/941/42993925555_945c115392_m.jpg 240w, https://farm1.staticflickr.com/941/42993925555_945c115392_n.jpg 320w, https://farm1.staticflickr.com/941/42993925555_945c115392.jpg 500w, https://farm1.staticflickr.com/941/42993925555_945c115392_z.jpg 640w, https://farm1.staticflickr.com/941/42993925555_945c115392_c.jpg 800w, https://farm1.staticflickr.com/941/42993925555_945c115392_b.jpg 1024w&quot; sizes=&quot;100vw&quot; /&gt;
  &lt;figcaption&gt;&lt;div class=&quot;license&quot;&gt;&amp;copy; Flickr/&lt;a href=&quot;https://www.flickr.com/photos/159982920@N04/42993925555/&quot;&gt;cmustrudel&lt;/a&gt; &lt;a href=&quot;&quot;&gt;All Rights Reserved&lt;/a&gt;&lt;/div&gt;&lt;/figcaption&gt;
&lt;/figure&gt;

</description>
        <pubDate>Wed, 25 Jul 2018 15:19:34 +0000</pubDate>
        <link>http://cmustrudel.github.io/blog/reading-group/reading-group-meeting</link>
        <guid isPermaLink="true">http://cmustrudel.github.io/blog/reading-group/reading-group-meeting</guid>
        
        
        <category>blog</category>
        
        <category>reading-group</category>
        
      </item>
    
      <item>
        <title>Announcement: Papers accepted at ESEC/FSE 2018</title>
        <description>&lt;p&gt;We’re fortunate to present two papers at &lt;a href=&quot;https://conf.researchr.org/home/fse-2018&quot;&gt;ESEC/FSE&lt;/a&gt; 
this year:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Congratulations to Marat on his paper with Bogdan and Jim:&lt;/p&gt;

    &lt;p&gt;&lt;a href=&quot;../papers/fse18sustainability.pdf&quot;&gt;&lt;strong&gt;Ecosystem-Level Determinants of Sustained Activity in Open-Source Projects: 
A Case Study of the PyPI Ecosystem&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;

    &lt;p&gt;&lt;strong&gt;Update&lt;/strong&gt;: Here’s Marat presenting:&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;figure class=&quot;flickr&quot;&gt;
  &lt;img class=&quot;flickr&quot; src=&quot;https://farm8.staticflickr.com/7886/46948724931_37b0445ae8_o.jpg&quot; srcset=&quot;&quot; sizes=&quot;100vw&quot; width=&quot;320w&quot; /&gt;
  &lt;figcaption&gt;&lt;div class=&quot;license&quot;&gt;&amp;copy; Flickr/&lt;a href=&quot;https://www.flickr.com/photos/159982920@N04/46948724931/&quot;&gt;cmustrudel&lt;/a&gt; &lt;a href=&quot;&quot;&gt;All Rights Reserved&lt;/a&gt;&lt;/div&gt;&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;!--more--&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;We also have a cool paper on Dockerized continuous deployment pipelines 
with our UC Davis collaborators:&lt;/p&gt;

    &lt;p&gt;&lt;a href=&quot;../papers/fse18cd.pdf&quot;&gt;&lt;strong&gt;One Size Does Not Fit All: An Empirical Study of Containerized Continuous 
Deployment Workflows&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;

    &lt;p&gt;&lt;strong&gt;Update&lt;/strong&gt;: Here’s Vladimir presenting:&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;figure class=&quot;flickr&quot;&gt;
  &lt;img class=&quot;flickr&quot; src=&quot;https://farm8.staticflickr.com/7846/46951035881_c78d9c7bf9_b.jpg&quot; srcset=&quot;https://farm8.staticflickr.com/7846/46951035881_c78d9c7bf9_m.jpg 240w, https://farm8.staticflickr.com/7846/46951035881_c78d9c7bf9_n.jpg 320w, https://farm8.staticflickr.com/7846/46951035881_c78d9c7bf9.jpg 500w, https://farm8.staticflickr.com/7846/46951035881_c78d9c7bf9_z.jpg 640w, https://farm8.staticflickr.com/7846/46951035881_c78d9c7bf9_c.jpg 800w, https://farm8.staticflickr.com/7846/46951035881_c78d9c7bf9_b.jpg 1024w&quot; sizes=&quot;100vw&quot; width=&quot;500w&quot; /&gt;
  &lt;figcaption&gt;&lt;div class=&quot;license&quot;&gt;&amp;copy; Flickr/&lt;a href=&quot;https://www.flickr.com/photos/159982920@N04/46951035881/&quot;&gt;cmustrudel&lt;/a&gt; &lt;a href=&quot;&quot;&gt;All Rights Reserved&lt;/a&gt;&lt;/div&gt;&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;Florida, here we come!&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Update&lt;/strong&gt;: Florida, here we were!&lt;/p&gt;

&lt;figure class=&quot;flickr&quot;&gt;
  &lt;img class=&quot;flickr&quot; src=&quot;https://farm5.staticflickr.com/4882/46896639082_55583d3ce4_b.jpg&quot; srcset=&quot;https://farm5.staticflickr.com/4882/46896639082_55583d3ce4_m.jpg 240w, https://farm5.staticflickr.com/4882/46896639082_55583d3ce4_n.jpg 320w, https://farm5.staticflickr.com/4882/46896639082_55583d3ce4.jpg 500w, https://farm5.staticflickr.com/4882/46896639082_55583d3ce4_z.jpg 640w, https://farm5.staticflickr.com/4882/46896639082_55583d3ce4_c.jpg 800w, https://farm5.staticflickr.com/4882/46896639082_55583d3ce4_b.jpg 1024w&quot; sizes=&quot;100vw&quot; /&gt;
  &lt;figcaption&gt;&lt;div class=&quot;license&quot;&gt;&amp;copy; Flickr/&lt;a href=&quot;https://www.flickr.com/photos/159982920@N04/46896639082/&quot;&gt;cmustrudel&lt;/a&gt; &lt;a href=&quot;&quot;&gt;All Rights Reserved&lt;/a&gt;&lt;/div&gt;&lt;/figcaption&gt;
&lt;/figure&gt;
</description>
        <pubDate>Mon, 16 Jul 2018 12:23:46 +0000</pubDate>
        <link>http://cmustrudel.github.io/announcement/fse-papers</link>
        <guid isPermaLink="true">http://cmustrudel.github.io/announcement/fse-papers</guid>
        
        
        <category>Announcement</category>
        
      </item>
    
      <item>
        <title>Blog: CMU trivia</title>
        <description>&lt;p&gt;To prepare myself for next year’s SCS trivia and to demonstrate my school pride,
I set up a one trivia a day challenge for myself. 
My plan is to continue this until I leave CMU.
All the trivias will be related to CMU or Computer Science in general. 
This year’s SCS trivia night made me realize how little I know about female
computer scientist, so I will focus
more on this part.&lt;/p&gt;

&lt;p&gt;I learned many of Computer Science related trivia from “Great Moments in
Computing”, a great course offered at
Princeton University taught by Professor Maragret Martonosi.
Many CMU related trivias are learned by wandering in campus during work breaks.
If you spot any mistakes in this post, please email me: hsqq at cmu dot edu&lt;/p&gt;

&lt;h4 id=&quot;hello-world&quot;&gt;Hello, world!&lt;/h4&gt;

&lt;p&gt;&lt;b&gt;March 23, 2018&lt;/b&gt;&lt;/p&gt;

&lt;p&gt;Let the first trivia be our most familiar program, &lt;b&gt;hello world&lt;/b&gt;.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Dr. Dennis Ritchie&lt;/b&gt; developed the language &lt;b&gt;C&lt;/b&gt;, which he used to
implement the operating system &lt;b&gt;Unix&lt;/b&gt; with &lt;b&gt;Ken Thompson&lt;/b&gt;.
To educate people how to use C, 
&lt;b&gt;Dr. Brian Kernighan&lt;/b&gt; wrote the textbook &lt;i&gt;The C Programming Language&lt;/i&gt; 
and used the program hello world as an introductory example. This was the first
apperance of the hello world program. 
Ever since then, most beginners’ first program in many languages have been some
variation of:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;main()

{

  printf(&quot;hello, world\n&quot;);

}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Dr. Brian Kernighan is now a professor at &lt;b&gt;Princeton University&lt;/b&gt;.&lt;/p&gt;

&lt;!--more--&gt;

&lt;h4 id=&quot;multics&quot;&gt;MULTICS&lt;/h4&gt;

&lt;p&gt;&lt;b&gt;March 24, 2018&lt;/b&gt;&lt;/p&gt;

&lt;p&gt;Now I want to talk about Unix, the operating system developed with C.
But before I can get to Unix itself, I want to briefly introduce
its predecessor, MULTICS.&lt;/p&gt;

&lt;p&gt;Before Unix, there was an operating system called &lt;b&gt;MULTICS&lt;/b&gt;(&lt;b&gt;Mult&lt;/b&gt;iplexed
&lt;b&gt;I&lt;/b&gt;nformation and &lt;b&gt;C&lt;/b&gt;omputing &lt;b&gt;S&lt;/b&gt;ervice), developed by &lt;b&gt;MIT, GE,
and Bell Lab&lt;/b&gt; and released in &lt;b&gt;1969&lt;/b&gt;.
You can read the original paper here: &lt;a href=&quot;https://www.classes.cs.uchicago.edu/archive/2017/fall/33100-1/papers/multics.pdf&quot;&gt;Virtual
Memory, Processes, and Sharing in MULTICS&lt;/a&gt; by &lt;b&gt;Robert C. Daley and Jack B.
Dennis&lt;/b&gt;.
The main concepts introduced with MULTICS are &lt;b&gt;Proccess&lt;/b&gt; and &lt;b&gt;Address
space&lt;/b&gt;.
Quoting from the paper:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Processes stand in one-to-one correspondence
with virtual memories. Each process runs in
its own address space, which is established independently
of other address spaces. Processes are run on a processor
at the discretion of the traffic controller module of the
supervisor.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;These concepts are still prevalent today.&lt;/p&gt;

&lt;h4 id=&quot;unix&quot;&gt;UNIX&lt;/h4&gt;

&lt;p&gt;&lt;b&gt;March 25, 2018&lt;/b&gt;&lt;/p&gt;

&lt;p&gt;Finally, &lt;b&gt;UNIX&lt;/b&gt;.&lt;/p&gt;

&lt;p&gt;The name UNIX stands for &lt;i&gt;Uniplexed Infromation and Computing Service&lt;/i&gt; and
it was suggested by Dr. Brian Kernighan in 1970.
It was developed by &lt;b&gt;Ken Thompson, Dennis Ritchie, Brian Kernighan, Douglas
Mcllroy, and Joe Ossanna&lt;/b&gt; at &lt;b&gt;Bell Labs&lt;/b&gt;.
The design of UNIX is summarized in &lt;a href=&quot;https://people.eecs.berkeley.edu/~brewer/cs262/unix.pdf&quot;&gt;&lt;i&gt;The UNIX
Time-Sharing System&lt;/i&gt;&lt;/a&gt; and published in &lt;b&gt;1974&lt;/b&gt;, 6 years after MULTICS.
I highly recommend reading this paper for it is a well-written paper and you
will be able to understand how clever the system was designed so that its
essence has not varied too much since its birth.&lt;/p&gt;

&lt;p&gt;The 1974 version of UNIX contained only 11K lines of code for the kernel (for
your reference, 2017 Linux kernel 4.1.38 contains ~5.4M lines of code).
One of the biggest difference between MULTICS and UNIX is that data on MULTICS
are stored in address, which allows random access, whereas in UNIX, data are stored in file, which is an
abstraction that allows user to handle hardware, directories, and normal files
in the same way be it random or sequential access.&lt;/p&gt;

&lt;p&gt;Dr. Dennis Ritchie and Ken Thompson won &lt;b&gt;Turing Award&lt;/b&gt; in &lt;b&gt;1983&lt;/b&gt;.&lt;/p&gt;

&lt;h4 id=&quot;alan-turing&quot;&gt;Alan Turing&lt;/h4&gt;

&lt;p&gt;&lt;b&gt;March 26, 2018&lt;/b&gt;&lt;/p&gt;

&lt;p&gt;Starting from today, I would like to talk about Turing Award, the most
prestigious award in the field of Computer Science.
But before I introduce any of Turing Award Winner, let me first talk about Alan
M. Turing.&lt;/p&gt;

&lt;p&gt;&lt;b&gt;Dr. Turing&lt;/b&gt; received his Ph.D. from &lt;b&gt;Princeton&lt;/b&gt;, where he spent only
&lt;b&gt;two years&lt;/b&gt;.
Unlike some people who drop out from grad college after two years, Dr. Turing
had earned his Ph.D. within those two years.
One of Turing’s  most famous contributions should be his &lt;b&gt;Turing test&lt;/b&gt;,
which he originally called “the imitation game” introduced in his paper &lt;i&gt;&lt;a href=&quot;http://phil415.pbworks.com/f/TuringComputing.pdf&quot;&gt;MIND
a quarterly review of psychology and philosophy&lt;/a&gt;&lt;/i&gt; in 1950, only 4 years after
the birth of ENIAC.
Turing is also known for his &lt;b&gt;lambda calculus&lt;/b&gt;, co-developed with his Ph.D.
advisor Alonzo Church, and &lt;b&gt;Turing Machine&lt;/b&gt;.&lt;/p&gt;

&lt;h4 id=&quot;turing-award-at-cmu&quot;&gt;Turing Award at CMU&lt;/h4&gt;

&lt;p&gt;A quick trivia.&lt;/p&gt;

&lt;figure class=&quot;flickr&quot;&gt;
  &lt;img class=&quot;flickr&quot; src=&quot;https://farm2.staticflickr.com/1835/42089453790_688fa58bb8_o.jpg&quot; srcset=&quot;https://farm2.staticflickr.com/1835/42089453790_14d36fbf72_n.jpg 240w&quot; sizes=&quot;100vw&quot; /&gt;
  &lt;figcaption&gt;&lt;div class=&quot;license&quot;&gt;&amp;copy; Flickr/&lt;a href=&quot;https://www.flickr.com/photos/159982920@N04/42089453790/&quot;&gt;cmustrudel&lt;/a&gt; &lt;a href=&quot;&quot;&gt;All Rights Reserved&lt;/a&gt;&lt;/div&gt;&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;h4 id=&quot;alan-perlis-1966&quot;&gt;Alan Perlis, 1966.&lt;/h4&gt;

&lt;p&gt;&lt;b&gt;March 27, 2018&lt;/b&gt;&lt;/p&gt;

&lt;p&gt;I was going to say that before I introduce Turing Award winners from the
earliest to the most recent, I would like to priotize those were or still are
related to CMU. However, I just learned that the first Turing Award winner was
the first head of our Computer Science Department at CMU, &lt;b&gt;Alan Perlis&lt;/b&gt;!&lt;/p&gt;

&lt;p&gt;Dr. Perlis made incredible amount of contribution to the field of computer
science.
He participated in the designing and building of some of the earliest electrical
computers. He also helped design &lt;b&gt;IBM 650&lt;/b&gt;. Together with Simon and Newell, he defined
the term &lt;b&gt;“computer science”&lt;/b&gt; to be “the theory and design of computers.”
In 1961, he taught the &lt;b&gt;first freshman-level computer science course&lt;/b&gt; in the nation at
Carnegie Tech, which later merged with Mellon Institute to form CMU.
In 1965, Computer Science Department was esablished and he became the first
head.&lt;/p&gt;

&lt;h4 id=&quot;allen-newell-and-herbert-simon-1975&quot;&gt;Allen Newell and Herbert Simon, 1975.&lt;/h4&gt;

&lt;p&gt;&lt;b&gt;March 28, 2018&lt;/b&gt;&lt;/p&gt;

&lt;p&gt;Herbert Alexander Simon was a professor in &lt;b&gt;Political Science&lt;/b&gt;. 
His insight of human decision making lead to his development of &lt;b&gt;heuristic
programming&lt;/b&gt;.
Dr. Simon’s research interests are AI, simulation, software design, and HCI, all
of which are still CMU’s strongest fields.
Dr. Simon also won the Nobel Prize in Economics.&lt;/p&gt;

&lt;p&gt;Dr. Newell earned his Ph.D. degree at CMU Tepper School advised by Dr. Simon. 
Together with his advisor Dr. Simon, they worked on heuristic programming and
created the first AI program, &lt;b&gt;Logic Theorist&lt;/b&gt;.
He spent a year at Princeton where he worked on game theory which influenced his
later work.&lt;/p&gt;

&lt;p&gt;Newell, Simon, and Perlis created Computer Science Department together in
&lt;b&gt;1965&lt;/b&gt;.
The building, Newell Simon Hall, for Human Computer Interaction Institute and Robotics Institute is
named after Dr. Newell and Dr. Simon.&lt;/p&gt;

&lt;h4 id=&quot;dana-stewart-scott-and-michael-o-rabin-1976&quot;&gt;Dana Stewart Scott and Michael O. Rabin, 1976.&lt;/h4&gt;

&lt;p&gt;&lt;b&gt;March 29, 2018&lt;/b&gt;&lt;/p&gt;

&lt;p&gt;Dr. Scott and Dr. Rabin jointly developed the idea of &lt;b&gt;nondeterministic
machines&lt;/b&gt; in the paper “Finite Automata and Their Decision Problem”.&lt;/p&gt;

&lt;p&gt;Dr. Scott earned his BA at Berkeley and his Ph.D. at Princeton. 
After jumping around multiple top universities, in 1981, he came to CMU and
became a professor of Computer Science, Mathematical Logic, and Philosophy. 
He took the position of Hillman Professor of Computer Science. 
Dr. Scott is also famous for his contribution to computer programming language
analysis.&lt;/p&gt;

&lt;p&gt;Dr. Rabin also earned his Ph.D. at Princeton in Mathematics. 
He is famous for his idea of adding randomness to algorithm.
His later work concerns cryptographic problems and helped develop a
zero-knowledge proof.&lt;/p&gt;

&lt;h4 id=&quot;robert-floyd-1978&quot;&gt;Robert Floyd, 1978.&lt;/h4&gt;

&lt;p&gt;&lt;b&gt;March 30, 2018&lt;/b&gt;&lt;/p&gt;

&lt;p&gt;Floyd received his Turing Award “for having a clear influence on
methodologies for the creation of efficient and reliable software, and for
helping to found the following important subfields of computer science: the
theory of parsing, the semantics of programming languages, automatic program
verification, automatic program synthesis, and analysis of algorithms.”
Floyd did not get a Ph.D.
However, he was appointed an associated professor at CMU when he was at the age
of 27 and, six years later, became a full professor at Stanford University.&lt;/p&gt;

&lt;h4 id=&quot;ivan-sutherland-1988&quot;&gt;Ivan Sutherland, 1988.&lt;/h4&gt;

&lt;p&gt;&lt;b&gt;March 31, 2018&lt;/b&gt;&lt;/p&gt;

&lt;p&gt;Ivan Sutherland earned his Bachelors of Science Degree from CMU, which was
Carnegie Institute of Technology back then. After he earned his Master of
Science Degree from California Institute of Technology in 1960, he went to MIT where he
worked with &lt;b&gt;Dr. Claude Shannon&lt;/b&gt; and earned his Ph.D. within 3 years.
His Ph.D. thesis “&lt;a href=&quot;https://www.cl.cam.ac.uk/techreports/UCAM-CL-TR-574.pdf&quot;&gt;Sketchpad: A
Man-machine Graphical Communications System&lt;/a&gt;” introduced &lt;b&gt;Sketchpad&lt;/b&gt;, the first computer graphics software.
Sketchpad was developed on the TX-2, which was one of the first transistor-based
computers with core memory. 
To use the Sketchpad, one needs to hold a lightpen, which, instead of emitting
lights as our mouses today, senses lights from the screen and determine the
pointing location.
The shapes drawn are stored like objects as in the notion of object-oriented
programming with the capability of creating
multiple identical but distinct copies and modifying each one of them
separately. 
A demo by Dr. Sutherland can be found here: &lt;a href=&quot;https://www.youtube.com/watch?v=57wj8diYpgY&quot;&gt;https://www.youtube.com/watch?v=57wj8diYpgY&lt;/a&gt;
His work is considered to be the&lt;/p&gt;

&lt;p&gt;Fun fact: Dr. Claude Shannon was the advisor of Ivan Sutherland and his older
brother, Bert Sutherland.&lt;/p&gt;

&lt;h4 id=&quot;d-waitzman&quot;&gt;D. Waitzman&lt;/h4&gt;

&lt;p&gt;&lt;b&gt;April 1, 2018&lt;/b&gt;&lt;/p&gt;

&lt;p&gt;D. Waitzman won some award (whatever it is) for his contribution in &lt;b&gt;IP over Avian Carriers
(IPoAC)&lt;/b&gt;. It is originally described in &lt;a href=&quot;https://tools.ietf.org/html/rfc1149&quot;&gt;&lt;b&gt;A Standard for the Transimission
of IP Datagrams on Avian Carriers&lt;/b&gt;&lt;/a&gt;.
This system can in theory achieve 145.6Gbit/s transfer rate but the packet loss
can be as high as 55%. Security is another weakness of IPoAC. Therefore, if you
are concerned about packet loss and security issues, don’t use this method.
Otherwise, it can be one of the fastest way of getting a huge amount of data
transferred.&lt;/p&gt;

&lt;p&gt;A friend of mine at Princeton once implemented a method that could transfer 1TB
data within half an hour with 0 packet loss.
He is not a student in computer science. He studies physics and mainly writes
code in FORTRAN.
His system is also highly secure with 0 information leekage - he drove to his lab and retrieved
his hard drive.&lt;/p&gt;

&lt;h4 id=&quot;edward-feigenbaum-and-raj-reddy-1994&quot;&gt;Edward Feigenbaum and Raj Reddy, 1994&lt;/h4&gt;

&lt;p&gt;&lt;b&gt;April 2, 2018&lt;/b&gt;&lt;/p&gt;

&lt;p&gt;They won Turing Award for their contribution in building large scale AI systems.&lt;/p&gt;

&lt;p&gt;Dr. Edward Feigenbaum is known as the father of &lt;b&gt;Expert Systems&lt;/b&gt;.
Dr. Feigenbaum earned is B.S. in Electrical Engineering at CMU where he took Dr.
Simon’s course on Mathematical Models in the Social Sciences and got his first
taste of computer science by studying Simon’s manual for IBM 701.
After he earned his B.S., he continuted for a Ph.D. at CMU with Dr. Simon on
building &lt;b&gt;a model that simulates how human learn nonsense syllables&lt;/b&gt;.
This model stores data with a decision tree, which he called &lt;b&gt;Discrimiation
Net&lt;/b&gt;.
It is interesting to see how our founders research interests are still carried
on by today’s CMU researchers.&lt;/p&gt;

&lt;p&gt;Dr. Reddy earned his Ph.D. at Stanford.&lt;/p&gt;

&lt;h4 id=&quot;manuel-blum-1995&quot;&gt;Manuel Blum, 1995&lt;/h4&gt;

&lt;p&gt;&lt;b&gt;April 3, 2018&lt;/b&gt;&lt;/p&gt;

&lt;p&gt;Dr. Blum is currently a professor at CMU. 
He won his Turing Award for “his contributions to the foundations of &lt;b&gt;computational
complexity theory&lt;/b&gt; and its application to &lt;b&gt;cryptography and program
checking&lt;/b&gt;.”
I just checked his website, he recently taught courses on undergraduate
complexity theory and intro to cryptography.
One of his great contributions is an algorithm that can find the median of a
sequence of numbers in linear time.
Fun fact: His wife is a distinguished professor at CMU SCS - &lt;b&gt;Lenore Blum&lt;/b&gt;.
Also, their child, &lt;b&gt;Avrim Blum&lt;/b&gt; is also a professor at CMU SCS. What a
family business!&lt;/p&gt;

&lt;h4 id=&quot;jonh-hennessy-and-david-patterson-2018&quot;&gt;Jonh Hennessy and David Patterson, 2018&lt;/h4&gt;

&lt;p&gt;&lt;b&gt;June 4, 2018&lt;/b&gt;&lt;/p&gt;

&lt;p&gt;They are introduced today because this year’s award was just announced.&lt;/p&gt;

&lt;p&gt;Dr. John L. Hennessy used to be the &lt;b&gt;President of Stanford&lt;/b&gt; and Dr. David A.
Patterson retired from &lt;b&gt;UC Berkeley&lt;/b&gt;. 
They are both rewarded the Turing Award for their contribution to a systematic,
quantitative approch to the design and evaluation of computer architectures. 
They wrote a very influencial textbook, &lt;b&gt;&lt;i&gt;Computer Architecture: A Quantitative
Approach&lt;/i&gt;&lt;/b&gt;, which is still used today by many computer architecture courses
(and I still have a copy of it).
I was lucky enough to attend Dr. Patterson’s talk on &lt;b&gt;RISC V&lt;/b&gt; at Princeton two years ago -
I’m a big fan of RISC.&lt;/p&gt;

&lt;h4 id=&quot;edmund-melson-clarke-allen-emerson-and-joseph-sifakis-2007&quot;&gt;Edmund Melson Clarke, Allen Emerson, and Joseph Sifakis, 2007&lt;/h4&gt;

&lt;p&gt;&lt;b&gt;June 5, 2018&lt;/b&gt;&lt;/p&gt;

&lt;p&gt;They won their Turing Award for “their role in developing &lt;b&gt;Model-Checking into a
highly effective verification technology&lt;/b&gt; that is widely adopted in the hardware
and software industries.”
Their work is built upon the idea of temporal logic, introduced by another
Turing Award winner, Amir Pnueli. Using temporal logic, one can write a computer
software to exhaustivly construct all possible action sequences, thus reliefing
designers’ work load on proving the correctness of a system.&lt;/p&gt;

&lt;p&gt;Dr. Clarke is a professor at CMU, and Dr. Emerson was his Ph.D. student when he
was at Harvard University.&lt;/p&gt;

&lt;h4 id=&quot;leslie-gabriel-valiant-2010&quot;&gt;Leslie Gabriel Valiant, 2010&lt;/h4&gt;

&lt;p&gt;&lt;b&gt;June 6, 2018&lt;/b&gt;&lt;/p&gt;

&lt;p&gt;Dr. Valiant received his Turing Award for “transformative contributions to the
theory of computation, including the theory of &lt;b&gt;probably approximately correct
(PAC) learning&lt;/b&gt;, the complexity of enumeration and of algebraic computation, and
the theory of parallel and distributed computing.”
The PAC is a model that considers a learning algorithm that can create a
hypothesis from the past experience and use it to make decision in the future
with controlled error.&lt;/p&gt;

&lt;p&gt;Dr. Valiant was a Visiting Assistant Professor at CMU in 1973-74.
He discovered that counting problems can be hard even when the decision problem
is simple. This discovery is important to computer science because&lt;/p&gt;

&lt;h4 id=&quot;shafi-goldwasser-and-silvio-micali-2012&quot;&gt;Shafi Goldwasser and Silvio Micali, 2012&lt;/h4&gt;

&lt;p&gt;&lt;b&gt;June 7, 2018&lt;/b&gt;&lt;/p&gt;

&lt;p&gt;They won the Turing Award for “transformative work that laid the
&lt;b&gt;complexity-theoretic foundations for the science of cryptography&lt;/b&gt;, and in the
process pioneered new methods for &lt;b&gt;efficient verification of mathematical proofs
in complexity theory&lt;/b&gt;.”
They have introduced some very interesting mathematical structures for
cryptography, such as &lt;b&gt;pseudorandomness&lt;/b&gt; and &lt;b&gt;interactive proofs&lt;/b&gt;. One
of my favourites is &lt;b&gt;zero-knowledge proof&lt;/b&gt;. I always think about
it has the story of Ali Baba and the fourty theives. It is all about how Ali
Baba can prove that he knows the password to the vault without revealing it
(because if the thieves know the password, they don’t need to preserve Ali
Baba’s life).&lt;/p&gt;

&lt;p&gt;Dr. Goldwasser was an undergrad at CMU.
One of the courses that introduced her into the field o theoretical
computer science was taught by Dr. Manuel Blum, another Turing Award recipient
currently teaching at CMU. She’s the first female Turing Award recipient I have
introduced here, but she’s not the first female recipient.&lt;/p&gt;

&lt;h4 id=&quot;frances-elizabeth-allen-2006&quot;&gt;Frances Elizabeth Allen, 2006.&lt;/h4&gt;

&lt;p&gt;&lt;b&gt;June 8, 2018&lt;/b&gt;&lt;/p&gt;

&lt;p&gt;She is the first female Turing Award recipient!&lt;/p&gt;

&lt;p&gt;She received the Turing Award for her “pioneering contributions to the theory
and practice of &lt;b&gt;optimizing compiler&lt;/b&gt; techniques that laid the foundation for
&lt;b&gt;modern optimizing compilers and automatic parallel execution&lt;/b&gt;.”
She joined IBM soon after the release of FORTRAN. By teaching FORTRAN, she
became interested in how to build compilers.
A key advance by her was that instead of representing programs as a sequence of
statements in the compiler, they are represented as a mathematical graph that
can be used to analyze the hidden properties of the code, so that computed
values can be re-used.&lt;/p&gt;

&lt;h4 id=&quot;barbara-liskov-2008&quot;&gt;Barbara Liskov, 2008.&lt;/h4&gt;

&lt;p&gt;&lt;b&gt;June 9, 2018&lt;/b&gt;&lt;/p&gt;

&lt;p&gt;She is the second female Turing Award recipient, who was acknowledged by her
“contributions to practical and theoretical foundations of programming language
and system design, especially related to data abstraction, fault tolerance, and
distributed computing.”&lt;/p&gt;

&lt;p&gt;She designed and implemented the &lt;b&gt;CLU&lt;/b&gt; programming language, which laid the
foundation of &lt;b&gt;object-oriented programming (OOP)&lt;/b&gt;. One of her major contributions
was her &lt;b&gt;Liskov Substitution Principle&lt;/b&gt;.
Later, she moved on to study distributed systems, including the &lt;a href=&quot;http://pmg.csail.mit.edu/papers/osdi99.pdf&quot;&gt;&lt;b&gt;Byzantine
fault tolerance algorithms&lt;/b&gt;&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;When she applied for Ph.D., she applied to Princeton as well. But Princeton did
not admit female student at that time and therefore unfortunately lost an
outstanding alumna.&lt;/p&gt;

&lt;p&gt;I believe these are all three female Turing Award recipients - Dr. Allen, Dr.
Liskov, and Dr. Goldwasser.&lt;/p&gt;
</description>
        <pubDate>Sat, 07 Jul 2018 22:26:32 +0000</pubDate>
        <link>http://cmustrudel.github.io/blog/cmu/CMUtrivia</link>
        <guid isPermaLink="true">http://cmustrudel.github.io/blog/cmu/CMUtrivia</guid>
        
        
        <category>blog</category>
        
        <category>CMU</category>
        
      </item>
    
  </channel>
</rss>
